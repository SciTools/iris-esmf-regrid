[build-system]
# Defined by PEP 518
requires = [
    "setuptools>=61",
]
# Defined by PEP 517
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "ESMF Regrid Contributors", email = "scitools.pub@gmail.com"},
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
description = "Iris regridding scheme using ESMF"
dynamic = [
    "dependencies",
    "optional-dependencies",
    "readme",
    "version",
]
keywords = [
    "esmf",
    "regrid",
]
license = {text = "BSD-3-Clause"}
name = "esmf_regrid"
requires-python = ">=3.10"

[project.urls]
Code = "https://github.com/SciTools/iris-esmf-regrid"
Docs = "https://iris-esmf-regrid.readthedocs.io/en/stable"
Issues = "https://github.com/SciTools/iris-esmf-regrid/issues"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.codespell]
ignore-words-list = "discontiguities"

[tool.pytest.ini_options]
addopts = ["-ra", "-v", "--doctest-modules", "--strict-config", "--strict-markers"]
minversion = "6.0"
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS NUMBER"
testpaths = "esmf_regrid"
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = ["default"]

[tool.setuptools]
license-files = ["LICENSE"]
zip-safe = false

[tool.setuptools.dynamic]
dependencies = {file = ["requirements/core.txt"]}
readme = {file = "README.md", content-type = "text/markdown"}
version = {attr = "esmf_regrid.__version__"}

[tool.setuptools.dynamic.optional-dependencies]
dev = {file = ["requirements/optional-dev.txt"]}
docs = {file = ["requirements/optional-docs.txt"]}

[tool.setuptools.packages.find]
include = ["esmf_regrid*"]

[tool.repo-review]
ignore = [
    # https://learn.scientific-python.org/development/guides/style/#PC170
    "PC170",  # PyGrep hooks
    # https://learn.scientific-python.org/development/guides/style/#PC180
    "PC180",  # Uses prettier
    "PY005",  # Test folder location
    "GH104",  # Unique names for upload artifact
    "GH212",  # Require GHA update grouping
]

[tool.mypy]
# See https://mypy.readthedocs.io/en/stable/config_file.html
ignore_missing_imports = true
warn_unused_configs = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
exclude = [
    'noxfile\.py',
    'docs/src/conf\.py',
    '^benchmarks',
]
strict = false  # Default value, make true when introducing type hinting.
no_namespace_packages = true

[tool.numpydoc_validation]
checks = [
    "all",  # Enable all numpydoc validation rules, apart from the following:

    # -> Docstring text (summary) should start in the line immediately
    #    after the opening quotes (not in the same line, or leaving a
    #    blank line in between)
    "GL01",  # Permit summary line on same line as docstring opening quotes.

    # -> Closing quotes should be placed in the line after the last text
    #    in the docstring (do not close the quotes in the same line as
    #    the text, or leave a blank line between the last text and the
    #    quotes)
    "GL02",  # Permit a blank line before docstring closing quotes.

    # -> Double line break found; please use only one blank line to
    #    separate sections or paragraphs, and do not leave blank lines
    #    at the end of docstrings
    "GL03",  # Ignoring.

    # -> See Also section not found
    "SA01",  # Not all docstrings require a "See Also" section.

    # -> No extended summary found
    "ES01",  # Not all docstrings require an "Extended Summary" section.

    # -> No examples section found
    "EX01",  # Not all docstrings require an "Examples" section.

    # -> No Yields section found
    "YD01",  # Not all docstrings require a "Yields" section.

    # Record temporarily ignored checks below; will be reviewed at a later date:

    # TODO: annotate and determine if these ought to be temporary or permanent
    "PR01",  # Undocumented parameters
    "PR02",  # Unknown parameters
    "PR04",  # Untyped parameters
    "PR05",  # Improper "."
    "PR07",  # Undescribed parameter
    "PR09",  # Missing "."
    "PR10",  # Missing space before colon
    "RT01",  # Missing returns section
    "RT03",  # Undescribed return section
    "RT05",  # Missing "."
    "GL08",  # Missing docstring
    "SS02",  # Missing capitalisation
    "SS05",  # Third person grammar

]
exclude = [
    '\.__eq__$',
    '\.__ne__$',
    '\.__repr__$',
]

[tool.ruff]
line-length = 88

[tool.ruff.format]
preview = false

[tool.ruff.lint]
ignore = [
    # NOTE: Non-permanent exclusions should be added to the ".ruff.toml" file.

    # flake8-commas (COM)
    # https://docs.astral.sh/ruff/rules/#flake8-commas-com
    "COM812",  # Trailing comma missing.
    "COM819",  # Trailing comma prohibited.

    # flake8-implicit-str-concat (ISC)
    # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/
    # NOTE: This rule may cause conflicts when used with "ruff format".
    "ISC001",  # Implicitly concatenate string literals on one line.


    # TODO: annotate and determine if these ought to be temporary or permanent
    "A001",
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN201",
    "ANN202",
    "ANN204",
    "ARG001",
    "ARG002",
    "B018",
    "B028",
    "B904",
    "C408",
    "C901",
    "D104",
    "E501",
    "EM101",
    "EM102",
    "ERA001",
    "F401",
    "F403",
    "FBT002",
    "FIX002",
    "FLY002",
    "INP001",
    "N802",
    "N806",
    "PERF401",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PLR2004",
    "PLW2901",
    "PTH107",
    "PTH110",
    "PYI024",
    "RET503",
    "RET504",
    "RUF005",
    "RUF012",
    "S101",
    "S603",
    "SIM108",
    "SLF001",
    "TD002",
    "TD003",
    "TID252",
    "TRY003",

    ]
    preview = false
    select = [
        "ALL",
        # list specific rules to include that is skipped using numpy convention.
        "D212",  # Multi-line docstring summary should start at the first line
    ]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["iris-esmf-regrid"]

[tool.ruff.lint.per-file-ignores]
# All test scripts

# TODO: annotate and determine if these ought to be temporary or permanent

"esmf_regrid/tests/*.py" = [
    # https://docs.astral.sh/ruff/rules/undocumented-public-module/
    "B006",
    "N999",
    "PT006",
    "PT007",
    "PT011",
    "PTH118",
    "PTH123",
]
"benchmarks/*.py" = [
    "ANN205",
    "D102",
    "D103",
    "DTZ005",
    "PLW1510",
    "S607",
    "TRY002",
]
"docs/src/conf.py" = [
    "E402",
    "DTZ005",
]
"noxfile.py" = [
    "FBT001",
    "PIE810",
    "S310",
    "S506",
    "SIM105",
    "T201",
]
"setup.py" = [
    "EXE001",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
